var (
	v1       = 1
	v2 int64 = 2
	v3 int64

	v4, v5 = 1, 2
	v6, v7 = 3.3, 4
	u1, u2 float64
	u3, u4 float64 = 3, 4
	u5, u6 float64 = 7.7, 8.8

	m     map[string]int
	ch    chan int
	slice []int
	str   string
	st    struct{N int}
	arr1  [2]int

	arr2 = [...]int{1, 2}
)

if v1 != int(1) {
	panic("ERROR 1")
}

if v2 != int64(2) {
	panic("ERROR 2")
}

if v3 != int64(0) {
	panic("ERROR 3")
}

if v4 != int(1) {
	panic("ERROR 4")
}
if v5 != int(2) {
	panic("ERROR 5")
}

if v6 != float64(3.3) {
	panic("ERROR 6")
}
if v7 != int(4) {
	panic("ERROR 7")
}

if u1 != float64(0) {
	panic("ERROR 8")
}
if u2 != float64(0) {
	panic("ERROR 9")
}

if u3 != float64(3) {
	panic("ERROR 10")
}
if u4 != float64(4) {
	panic("ERROR 11")
}

if u5 != float64(7.7) {
	panic("ERROR 12")
}
if u6 != float64(8.8) {
	panic("ERROR 13")
}

if len(m) != 0 {
	panic("ERROR 14")
}

if ch != nil {
	panic("ERROR 15")
}

if len(slice) != 0 {
	panic("ERROR 16")
}

if str != "" {
	panic("ERROR 17")
}

if st.N != 0 {
	panic("ERROR 18")
}

if len(arr1) != 2 {
	panic("ERROR 19")
}

if len(arr2) != 2 {
	panic("ERROR 20")
}

print("OK")
