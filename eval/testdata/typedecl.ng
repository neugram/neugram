type T1 int
type (
	T2 int64
	T3 struct {
		F1 int
		F2 string
	}
	T4 []int
	T5 [2]int
	T6 []T3
	T7 map[string]T6
)

type Node struct {
	Value int
	Prev  *Node
	Next  *Node
}

type T8 struct {
	A string `json:"a"`
	B string "xml"
}

type Padding struct {
	_ [4]byte
	N string
	_ [4]byte
}

type Point struct {
	X, Y int
}

var pt Point
if pt.X != 0 {
	panic("ERROR 1")
}
if pt.Y != 0 {
	panic("ERROR 2")
}

pt.X = 24
pt.Y = 42

if pt.X != 24 {
	panic("ERROR 3")
}
if pt.Y != 42 {
	panic("ERROR 4")
}

print("OK")
